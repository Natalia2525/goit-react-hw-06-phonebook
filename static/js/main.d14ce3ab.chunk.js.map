{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contact-actions.js","Components/PhonebookForm/PhonebookForm.jsx","Components/ContactList/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","addContact","createAction","data","payload","id","shortid","generate","name","number","deleteContact","changeFilter","PhonebookForm","useState","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","contact","alert","handleUniq","className","st","form","onSubmit","e","preventDefault","title","input","type","value","onChange","target","button","useStyles","createUseStyles","listItem","width","display","alignItems","padding","background","marginRight","fontWeight","backgroundColor","boxShadow","borderRadius","cursor","ContactItem","classes","onClick","list","margin","ContactList","getVisibleContacts","toLowerCase","includes","toLocaleLowerCase","map","flexDirection","marginBottom","Filter","App","createReducer","_","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d14ce3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__pgc4h\",\"title\":\"PhonebookForm_title__2p_0E\",\"input\":\"PhonebookForm_input__2cR7C\",\"button\":\"PhonebookForm_button__28XKL\"};","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n","// import types from './contact-types';\r\nimport shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction('contacts/add', data => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n// export const addContact = data => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n// export const deleteContact = payload => ({\r\n//   type: types.DELETE,\r\n//   payload,\r\n// });\r\n\r\n// export const changeFilter = payload => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload,\r\n// });\r\n\r\n","import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport st from './PhonebookForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contact-actions';\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please Ðµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  return (\r\n    <form className={st.form} onSubmit={handleSubmit}>\r\n      <label className={st.title}>\r\n        Name\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={st.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// PhonebookForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n//   onCheckUniq: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default PhonebookForm;\r\n","import { createUseStyles } from 'react-jss';\r\nimport {  useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/contacts/contact-actions';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    background: 'linear-gradient(to left, #f8ab8d 0%, white, #f8ab8d)',\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: 'rgb(184, 92, 80)',\r\n    boxShadow: '0px 0px 3px 0px black',\r\n    borderRadius: 5,\r\n    cursor: 'pointer',\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={classes.listItem}>\r\n      <p className={classes.name}>{contact.name}</p>\r\n      <p className={classes.number}>{contact.number}</p>\r\n      <button className={classes.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem';\r\n// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  const classes = useStyles();\r\n\r\n  const getVisibleContacts = !filter\r\n    ? contacts\r\n    : contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n      );\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {getVisibleContacts.map(contact => (\r\n        <ContactItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   onDelete: PropTypes.func.isRequired,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//   ).isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contact-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 200,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nconst Filter = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <label className={classes.title}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string,\r\n// };\r\n\r\nexport default Filter;\r\n","// import { useState, useEffect } from 'react';\r\nimport PhonebookForm from './Components/PhonebookForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\n\r\nconst App = () => {\r\n  // useEffect(() => {\r\n  //   const json = localStorage.getItem('contacts');\r\n  //   const savedContacts = JSON.parse(json);\r\n  //   if (savedContacts) {\r\n  //     setContacts(savedContacts);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const json = JSON.stringify(contacts);\r\n  //   localStorage.setItem('contacts', json);\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import { combineReducers } from 'redux';\r\n// import types from './contact-types';\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contact-actions';\r\n\r\nconst initialState = {\r\n  items: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\n// const items = (state = initialState.items, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore } from 'redux';\r\n// import { combineReducers } from 'redux';\r\nimport contactsReducer from './contacts/contact-reducer';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}